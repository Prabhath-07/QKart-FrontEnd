{"version":3,"sources":["components/Footer.js","components/Header.js","components/Register.js","App.js","theme.js","index.js"],"names":["Footer","Box","className","src","alt","Header","children","hasHiddenAuthButtons","Button","startIcon","variant","Register","useSnackbar","enqueueSnackbar","display","flexDirection","justifyContent","minHeight","Stack","spacing","TextField","id","label","title","name","placeholder","fullWidth","type","helperText","ipConfig","workspaceIp","App","createTheme","typography","fontFamily","palette","primary","light","main","dark","contrastText","ReactDOM","render","StrictMode","maxSnack","anchorOrigin","vertical","horizontal","preventDuplicate"],"mappings":"0YAkBeA,EAdA,WACb,OACE,eAACC,EAAA,EAAG,CAACC,UAAU,SAAQ,UACrB,cAACD,EAAA,EAAG,UACF,qBAAKE,IAAI,gBAAgBC,IAAI,iBAE/B,mBAAGF,UAAU,cAAa,mIAMhC,E,mCCOeG,G,OAjBA,SAAH,GAAc,EAARC,SAA8B,EAApBC,qBACxB,OACE,eAAC,IAAG,CAACL,UAAU,SAAQ,UACrB,cAAC,IAAG,CAACA,UAAU,eAAc,SACzB,qBAAKC,IAAI,iBAAiBC,IAAI,iBAElC,cAACI,EAAA,EAAM,CACLN,UAAU,iBACVO,UAAW,cAAC,IAAa,IACzBC,QAAQ,OAAM,+BAMxB,GCuFeC,G,OAjGE,WACaC,cAApBC,gBAgDR,OACE,eAACZ,EAAA,EAAG,CACFa,QAAQ,OACRC,cAAc,SACdC,eAAe,gBACfC,UAAU,QAAO,UAEjB,cAAC,EAAM,CAACV,sBAAoB,IAC5B,cAACN,EAAA,EAAG,CAACC,UAAU,UAAS,SACtB,eAACgB,EAAA,EAAK,CAACC,QAAS,EAAGjB,UAAU,OAAM,UACjC,oBAAIA,UAAU,QAAO,sBACrB,cAACkB,EAAA,EAAS,CACRC,GAAG,WACHC,MAAM,WACNZ,QAAQ,WACRa,MAAM,WACNC,KAAK,WACLC,YAAY,iBACZC,WAAS,IAEX,cAACN,EAAA,EAAS,CACRC,GAAG,WACHX,QAAQ,WACRY,MAAM,WACNE,KAAK,WACLG,KAAK,WACLC,WAAW,+CACXF,WAAS,EACTD,YAAY,+CAEd,cAACL,EAAA,EAAS,CACRC,GAAG,kBACHX,QAAQ,WACRY,MAAM,mBACNE,KAAK,kBACLG,KAAK,WACLD,WAAS,IAEX,oBAAGxB,UAAU,mBAAkB,qCACJ,YAI/B,cAAC,EAAM,MAGb,G,oCCnGW,UAAD,OAAY2B,EAASC,YAAW,gBAW3BC,MARf,WACE,OACE,qBAAK7B,UAAU,MAAK,SACd,cAAC,EAAQ,KAGnB,E,QCdc8B,YAAY,CACxBC,WAAY,CACVC,WAAY,QAEdC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WCFpBC,IAASC,OACP,cAAC,IAAMC,WAAU,UACX,cAAC,IAAgB,CACfC,SAAU,EACVC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,kBAAgB,WAEhB,cAAC,EAAG,Q","file":"static/js/main.57c8c4f6.chunk.js","sourcesContent":["import { Box } from \"@mui/system\";\nimport React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  return (\n    <Box className=\"footer\">\n      <Box>\n        <img src=\"logo_dark.svg\" alt=\"QKart-icon\"></img>\n      </Box>\n      <p className=\"footer-text\">\n        QKart is your one stop solution to the buy the latest trending items\n        with India's Fastest Delivery to your doorstep\n      </p>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport { Avatar, Button, Stack } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport React from \"react\";\nimport \"./Header.css\";\n\nconst Header = ({ children, hasHiddenAuthButtons }) => {\n    return (\n      <Box className=\"header\">\n        <Box className=\"header-title\">\n            <img src=\"logo_light.svg\" alt=\"QKart-icon\"></img>\n        </Box>\n        <Button\n          className=\"explore-button\"\n          startIcon={<ArrowBackIcon />}\n          variant=\"text\"\n        >\n          Back to explore\n        </Button>\n      </Box>\n    );\n};\n\nexport default Header;\n","import { Button, CircularProgress, Stack, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport axios from \"axios\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useState } from \"react\";\nimport { config } from \"../App\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport \"./Register.css\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst Register = () => {\n  const { enqueueSnackbar } = useSnackbar();\n\n\n  /**\n   * Definition for register handler\n   * - Function to be called when the user clicks on the register button or submits the register form\n   *\n   * @param {{ username: string, password: string, confirmPassword: string }} formData\n   *  Object with values of username, password and confirm password user entered to register\n   *\n   * API endpoint - \"POST /auth/register\"\n   *\n   * Example for successful response from backend for the API call:\n   * HTTP 201\n   * {\n   *      \"success\": true,\n   * }\n   *\n   * Example for failed response from backend for the API call:\n   * HTTP 400\n   * {\n   *      \"success\": false,\n   *      \"message\": \"Username is already taken\"\n   * }\n   */\n  const register = async (formData) => {\n  };\n\n  /**\n   * Validate the input values so that any bad or illegal values are not passed to the backend.\n   *\n   * @param {{ username: string, password: string, confirmPassword: string }} data\n   *  Object with values of username, password and confirm password user entered to register\n   *\n   * @returns {boolean}\n   *    Whether validation has passed or not\n   *\n   * Return false if any validation condition fails, otherwise return true.\n   * (NOTE: The error messages to be shown for each of these cases, are given with them)\n   * -    Check that username field is not an empty value - \"Username is a required field\"\n   * -    Check that username field is not less than 6 characters in length - \"Username must be at least 6 characters\"\n   * -    Check that password field is not an empty value - \"Password is a required field\"\n   * -    Check that password field is not less than 6 characters in length - \"Password must be at least 6 characters\"\n   * -    Check that confirmPassword field has the same value as password field - Passwords do not match\n   */\n  const validateInput = (data) => {\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n      minHeight=\"100vh\"\n    >\n      <Header hasHiddenAuthButtons />\n      <Box className=\"content\">\n        <Stack spacing={2} className=\"form\">\n          <h2 className=\"title\">Register</h2>\n          <TextField\n            id=\"username\"\n            label=\"Username\"\n            variant=\"outlined\"\n            title=\"Username\"\n            name=\"username\"\n            placeholder=\"Enter Username\"\n            fullWidth\n          />\n          <TextField\n            id=\"password\"\n            variant=\"outlined\"\n            label=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            helperText=\"Password must be atleast 6 characters length\"\n            fullWidth\n            placeholder=\"Enter a password with minimum 6 characters\"\n          />\n          <TextField\n            id=\"confirmPassword\"\n            variant=\"outlined\"\n            label=\"Confirm Password\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            fullWidth\n          />\n          <p className=\"secondary-action\">\n            Already have an account?{\" \"}\n          </p>\n        </Stack>\n      </Box>\n      <Footer />\n    </Box>\n  );\n};\n\nexport default Register;\n","import Register from \"./components/Register\";\nimport ipConfig from \"./ipConfig.json\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Products from \"./components/Products\";\n\nexport const config = {\n  endpoint: `http://${ipConfig.workspaceIp}:8082/api/v1`,\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n          <Register />\n    </div>\n  );\n}\n\nexport default App;\n","import { createTheme } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: \"Lato\"\n  },\n  palette: {\n    primary: {\n      light: \"#45c09f\",\n      main: \"#00a278\",\n      dark: \"#00845c\",\n      contrastText: \"#fff\",\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { SnackbarProvider } from \"notistack\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"@mui/system\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n        <SnackbarProvider\n          maxSnack={1}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          preventDuplicate\n        >\n          <App />\n        </SnackbarProvider>\n  </React.StrictMode>,\n);\n"],"sourceRoot":""}